/*
	Copyright 1998-2003 Interplay Entertainment Corp.  All rights reserved.
*/

/******************************************************************************************
        Item: Wood Door
        Locked: Yes  +100%
        Trapped: No
        Description: This is a generic locked  wooden door.

        Log:
           Please note any changes that have been made to the file in Updated. Then comment
           the code which you have changed/altered/commented out. Please, do not delete any
           code which was written.

           Created: September 26, 1997

           Updated:
******************************************************************************************/


/* Include Files */
#define SCRIPT_REALNAME "doorl100"

/* Sets whether the door is locked or trapped */
#define LOCKED_STATUS                   STATE_ACTIVE
#define TRAPPED_STATUS                  STATE_INACTIVE
#define DOOR_STATUS                     STATE_WOOD
#define LOCK_STATUS                     STATE_STANDARD_LOCK

/* Penalties for Lock difficulty based on whether or not you are using lockpicks. */
#define Lock_Bonus                      (100)

/* Penalties for disarming the trap */







#define custom_look_at_p_proc
#include "../headers/doors.h"










/********************************************************************
   Any time that a critter tries to use this door will call this
   procedure. it will check to see if the door is trapped and locked.
********************************************************************/

procedure use_p_proc begin
/* Trap_Roll is a global variable to this script, defined at the beginning
   of the script. */

   Traps_Roll:=roll_vs_skill(source_obj,SKILL_TRAPS,Trap_Bonus);

   if (local_var(LVAR_Trapped) == STATE_ACTIVE) then begin
       if (is_success(Traps_Roll)) then begin
           script_overrides;
           set_local_var(LVAR_Found_Trap,1);
           reg_anim_clear(source_obj);

           if (source_obj == dude_obj) then begin
               display_msg(door_mstr(204));
           end
           else begin
               display_msg(door_mstr(205));
           end
       end

       else begin
           if (obj_is_locked(self_obj)) then begin
               script_overrides;
               display_msg(door_mstr(203));
               call Damage_Critter;
           end
           else begin
               call Damage_Critter;
           end
       end
   end

   else if (obj_is_locked(self_obj)) then begin
       script_overrides;
       display_msg(door_mstr(203));
   end
end

procedure look_at_p_proc begin
end





